//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sciendo.Music.Contracts.Analysis
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Snapshot", Namespace="http://schemas.datacontract.org/2004/07/Sciendo.Music.Contracts.Analysis")]
    public partial class Snapshot : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        private int SnapshotIdField;
        
        private System.DateTime TakenAtField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SnapshotId
        {
            get
            {
                return this.SnapshotIdField;
            }
            set
            {
                this.SnapshotIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TakenAt
        {
            get
            {
                return this.TakenAtField;
            }
            set
            {
                this.TakenAtField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Element", Namespace="http://schemas.datacontract.org/2004/07/Sciendo.Music.Contracts.Analysis")]
    public partial class Element : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ElementIdField;
        
        private Sciendo.Music.Contracts.Analysis.IndexedFlag IndexedFlagField;
        
        private Sciendo.Music.Contracts.Analysis.LyricsFileFlag LyricsFileFlagField;
        
        private Sciendo.Music.Contracts.Analysis.MusicFileFlag MusicFileFlagField;
        
        private string NameField;
        
        private int SnapshotIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementId
        {
            get
            {
                return this.ElementIdField;
            }
            set
            {
                this.ElementIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sciendo.Music.Contracts.Analysis.IndexedFlag IndexedFlag
        {
            get
            {
                return this.IndexedFlagField;
            }
            set
            {
                this.IndexedFlagField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sciendo.Music.Contracts.Analysis.LyricsFileFlag LyricsFileFlag
        {
            get
            {
                return this.LyricsFileFlagField;
            }
            set
            {
                this.LyricsFileFlagField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sciendo.Music.Contracts.Analysis.MusicFileFlag MusicFileFlag
        {
            get
            {
                return this.MusicFileFlagField;
            }
            set
            {
                this.MusicFileFlagField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SnapshotId
        {
            get
            {
                return this.SnapshotIdField;
            }
            set
            {
                this.SnapshotIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexedFlag", Namespace="http://schemas.datacontract.org/2004/07/Sciendo.Music.Contracts.Analysis")]
    public enum IndexedFlag : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotIndexed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Indexed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndexedArtist = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndexedAlbum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndexedTitle = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndexedLyrics = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="LyricsFileFlag", Namespace="http://schemas.datacontract.org/2004/07/Sciendo.Music.Contracts.Analysis")]
    public enum LyricsFileFlag : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLyricsFile = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasLyricsFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LyricsFileWithError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LyricsFileNoLyrics = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LyricsFileOk = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="MusicFileFlag", Namespace="http://schemas.datacontract.org/2004/07/Sciendo.Music.Contracts.Analysis")]
    public enum MusicFileFlag : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAMusicFile = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsMusicFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasTag = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasArtistTag = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasAlbumTag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasTitleTag = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatisticRow", Namespace="http://schemas.datacontract.org/2004/07/Sciendo.Music.Contracts.Analysis")]
    public partial class StatisticRow : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AlbumTagField;
        
        private int ArtistTagField;
        
        private int FilesField;
        
        private int IndexedField;
        
        private int IndexedAlbumField;
        
        private int IndexedArtistField;
        
        private int IndexedLyricsField;
        
        private int IndexedTitleField;
        
        private int LyricsField;
        
        private int LyricsErrorField;
        
        private int LyricsNotFoundField;
        
        private int LyricsOkField;
        
        private int MusicFilesField;
        
        private string NameField;
        
        private int NotIndexedField;
        
        private int NotTaggedField;
        
        private int TaggedField;
        
        private int TitleTagField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumTag
        {
            get
            {
                return this.AlbumTagField;
            }
            set
            {
                this.AlbumTagField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistTag
        {
            get
            {
                return this.ArtistTagField;
            }
            set
            {
                this.ArtistTagField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Files
        {
            get
            {
                return this.FilesField;
            }
            set
            {
                this.FilesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Indexed
        {
            get
            {
                return this.IndexedField;
            }
            set
            {
                this.IndexedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexedAlbum
        {
            get
            {
                return this.IndexedAlbumField;
            }
            set
            {
                this.IndexedAlbumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexedArtist
        {
            get
            {
                return this.IndexedArtistField;
            }
            set
            {
                this.IndexedArtistField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexedLyrics
        {
            get
            {
                return this.IndexedLyricsField;
            }
            set
            {
                this.IndexedLyricsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexedTitle
        {
            get
            {
                return this.IndexedTitleField;
            }
            set
            {
                this.IndexedTitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lyrics
        {
            get
            {
                return this.LyricsField;
            }
            set
            {
                this.LyricsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LyricsError
        {
            get
            {
                return this.LyricsErrorField;
            }
            set
            {
                this.LyricsErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LyricsNotFound
        {
            get
            {
                return this.LyricsNotFoundField;
            }
            set
            {
                this.LyricsNotFoundField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LyricsOk
        {
            get
            {
                return this.LyricsOkField;
            }
            set
            {
                this.LyricsOkField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MusicFiles
        {
            get
            {
                return this.MusicFilesField;
            }
            set
            {
                this.MusicFilesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotIndexed
        {
            get
            {
                return this.NotIndexedField;
            }
            set
            {
                this.NotIndexedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotTagged
        {
            get
            {
                return this.NotTaggedField;
            }
            set
            {
                this.NotTaggedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tagged
        {
            get
            {
                return this.TaggedField;
            }
            set
            {
                this.TaggedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TitleTag
        {
            get
            {
                return this.TitleTagField;
            }
            set
            {
                this.TitleTagField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://Sciendo.Music.Analysis", ConfigurationName="IAnalysis")]
public interface IAnalysis
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://Sciendo.Music.Analysis/IAnalysis/GetAllAnalysisSnaphots", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/GetAllAnalysisSnaphotsResponse")]
    Sciendo.Music.Contracts.Analysis.Snapshot[] GetAllAnalysisSnaphots();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Sciendo.Music.Analysis/IAnalysis/GetAllAnalysisSnaphots", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/GetAllAnalysisSnaphotsResponse")]
    System.IAsyncResult BeginGetAllAnalysisSnaphots(System.AsyncCallback callback, object asyncState);
    
    Sciendo.Music.Contracts.Analysis.Snapshot[] EndGetAllAnalysisSnaphots(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://Sciendo.Music.Analysis/IAnalysis/GetAnalysis", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/GetAnalysisResponse")]
    Sciendo.Music.Contracts.Analysis.Element[] GetAnalysis(string fromPath, int snapshotId);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Sciendo.Music.Analysis/IAnalysis/GetAnalysis", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/GetAnalysisResponse")]
    System.IAsyncResult BeginGetAnalysis(string fromPath, int snapshotId, System.AsyncCallback callback, object asyncState);
    
    Sciendo.Music.Contracts.Analysis.Element[] EndGetAnalysis(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://Sciendo.Music.Analysis/IAnalysis/CreateNewSnapshot", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/CreateNewSnapshotResponse")]
    Sciendo.Music.Contracts.Analysis.Snapshot CreateNewSnapshot(string name);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Sciendo.Music.Analysis/IAnalysis/CreateNewSnapshot", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/CreateNewSnapshotResponse")]
    System.IAsyncResult BeginCreateNewSnapshot(string name, System.AsyncCallback callback, object asyncState);
    
    Sciendo.Music.Contracts.Analysis.Snapshot EndCreateNewSnapshot(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://Sciendo.Music.Analysis/IAnalysis/CreateElements", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/CreateElementsResponse")]
    int CreateElements(Sciendo.Music.Contracts.Analysis.Element[] newElements);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Sciendo.Music.Analysis/IAnalysis/CreateElements", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/CreateElementsResponse")]
    System.IAsyncResult BeginCreateElements(Sciendo.Music.Contracts.Analysis.Element[] newElements, System.AsyncCallback callback, object asyncState);
    
    int EndCreateElements(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://Sciendo.Music.Analysis/IAnalysis/GetStatistics", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/GetStatisticsResponse")]
    Sciendo.Music.Contracts.Analysis.StatisticRow[] GetStatistics(string fromPath, int snapshotId);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Sciendo.Music.Analysis/IAnalysis/GetStatistics", ReplyAction="http://Sciendo.Music.Analysis/IAnalysis/GetStatisticsResponse")]
    System.IAsyncResult BeginGetStatistics(string fromPath, int snapshotId, System.AsyncCallback callback, object asyncState);
    
    Sciendo.Music.Contracts.Analysis.StatisticRow[] EndGetStatistics(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Sciendo.Music.Analysis/IAnalysis/AnaliseThis")]
    void AnaliseThis(string folder, int snapshotId);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://Sciendo.Music.Analysis/IAnalysis/AnaliseThis")]
    System.IAsyncResult BeginAnaliseThis(string folder, int snapshotId, System.AsyncCallback callback, object asyncState);
    
    void EndAnaliseThis(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAnalysisChannel : IAnalysis, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllAnalysisSnaphotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllAnalysisSnaphotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Sciendo.Music.Contracts.Analysis.Snapshot[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Sciendo.Music.Contracts.Analysis.Snapshot[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAnalysisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAnalysisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Sciendo.Music.Contracts.Analysis.Element[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Sciendo.Music.Contracts.Analysis.Element[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateNewSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CreateNewSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Sciendo.Music.Contracts.Analysis.Snapshot Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Sciendo.Music.Contracts.Analysis.Snapshot)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CreateElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Sciendo.Music.Contracts.Analysis.StatisticRow[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Sciendo.Music.Contracts.Analysis.StatisticRow[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AnalysisClient : System.ServiceModel.ClientBase<IAnalysis>, IAnalysis
{
    
    private BeginOperationDelegate onBeginGetAllAnalysisSnaphotsDelegate;
    
    private EndOperationDelegate onEndGetAllAnalysisSnaphotsDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllAnalysisSnaphotsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAnalysisDelegate;
    
    private EndOperationDelegate onEndGetAnalysisDelegate;
    
    private System.Threading.SendOrPostCallback onGetAnalysisCompletedDelegate;
    
    private BeginOperationDelegate onBeginCreateNewSnapshotDelegate;
    
    private EndOperationDelegate onEndCreateNewSnapshotDelegate;
    
    private System.Threading.SendOrPostCallback onCreateNewSnapshotCompletedDelegate;
    
    private BeginOperationDelegate onBeginCreateElementsDelegate;
    
    private EndOperationDelegate onEndCreateElementsDelegate;
    
    private System.Threading.SendOrPostCallback onCreateElementsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetStatisticsDelegate;
    
    private EndOperationDelegate onEndGetStatisticsDelegate;
    
    private System.Threading.SendOrPostCallback onGetStatisticsCompletedDelegate;
    
    private BeginOperationDelegate onBeginAnaliseThisDelegate;
    
    private EndOperationDelegate onEndAnaliseThisDelegate;
    
    private System.Threading.SendOrPostCallback onAnaliseThisCompletedDelegate;
    
    public AnalysisClient()
    {
    }
    
    public AnalysisClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public AnalysisClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AnalysisClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AnalysisClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public event System.EventHandler<GetAllAnalysisSnaphotsCompletedEventArgs> GetAllAnalysisSnaphotsCompleted;
    
    public event System.EventHandler<GetAnalysisCompletedEventArgs> GetAnalysisCompleted;
    
    public event System.EventHandler<CreateNewSnapshotCompletedEventArgs> CreateNewSnapshotCompleted;
    
    public event System.EventHandler<CreateElementsCompletedEventArgs> CreateElementsCompleted;
    
    public event System.EventHandler<GetStatisticsCompletedEventArgs> GetStatisticsCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AnaliseThisCompleted;
    
    public Sciendo.Music.Contracts.Analysis.Snapshot[] GetAllAnalysisSnaphots()
    {
        return base.Channel.GetAllAnalysisSnaphots();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetAllAnalysisSnaphots(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllAnalysisSnaphots(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public Sciendo.Music.Contracts.Analysis.Snapshot[] EndGetAllAnalysisSnaphots(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllAnalysisSnaphots(result);
    }
    
    private System.IAsyncResult OnBeginGetAllAnalysisSnaphots(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginGetAllAnalysisSnaphots(callback, asyncState);
    }
    
    private object[] OnEndGetAllAnalysisSnaphots(System.IAsyncResult result)
    {
        Sciendo.Music.Contracts.Analysis.Snapshot[] retVal = this.EndGetAllAnalysisSnaphots(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllAnalysisSnaphotsCompleted(object state)
    {
        if ((this.GetAllAnalysisSnaphotsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllAnalysisSnaphotsCompleted(this, new GetAllAnalysisSnaphotsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllAnalysisSnaphotsAsync()
    {
        this.GetAllAnalysisSnaphotsAsync(null);
    }
    
    public void GetAllAnalysisSnaphotsAsync(object userState)
    {
        if ((this.onBeginGetAllAnalysisSnaphotsDelegate == null))
        {
            this.onBeginGetAllAnalysisSnaphotsDelegate = new BeginOperationDelegate(this.OnBeginGetAllAnalysisSnaphots);
        }
        if ((this.onEndGetAllAnalysisSnaphotsDelegate == null))
        {
            this.onEndGetAllAnalysisSnaphotsDelegate = new EndOperationDelegate(this.OnEndGetAllAnalysisSnaphots);
        }
        if ((this.onGetAllAnalysisSnaphotsCompletedDelegate == null))
        {
            this.onGetAllAnalysisSnaphotsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAnalysisSnaphotsCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllAnalysisSnaphotsDelegate, null, this.onEndGetAllAnalysisSnaphotsDelegate, this.onGetAllAnalysisSnaphotsCompletedDelegate, userState);
    }
    
    public Sciendo.Music.Contracts.Analysis.Element[] GetAnalysis(string fromPath, int snapshotId)
    {
        return base.Channel.GetAnalysis(fromPath, snapshotId);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetAnalysis(string fromPath, int snapshotId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAnalysis(fromPath, snapshotId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public Sciendo.Music.Contracts.Analysis.Element[] EndGetAnalysis(System.IAsyncResult result)
    {
        return base.Channel.EndGetAnalysis(result);
    }
    
    private System.IAsyncResult OnBeginGetAnalysis(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string fromPath = ((string)(inValues[0]));
        int snapshotId = ((int)(inValues[1]));
        return this.BeginGetAnalysis(fromPath, snapshotId, callback, asyncState);
    }
    
    private object[] OnEndGetAnalysis(System.IAsyncResult result)
    {
        Sciendo.Music.Contracts.Analysis.Element[] retVal = this.EndGetAnalysis(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAnalysisCompleted(object state)
    {
        if ((this.GetAnalysisCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAnalysisCompleted(this, new GetAnalysisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAnalysisAsync(string fromPath, int snapshotId)
    {
        this.GetAnalysisAsync(fromPath, snapshotId, null);
    }
    
    public void GetAnalysisAsync(string fromPath, int snapshotId, object userState)
    {
        if ((this.onBeginGetAnalysisDelegate == null))
        {
            this.onBeginGetAnalysisDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysis);
        }
        if ((this.onEndGetAnalysisDelegate == null))
        {
            this.onEndGetAnalysisDelegate = new EndOperationDelegate(this.OnEndGetAnalysis);
        }
        if ((this.onGetAnalysisCompletedDelegate == null))
        {
            this.onGetAnalysisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysisCompleted);
        }
        base.InvokeAsync(this.onBeginGetAnalysisDelegate, new object[] {
                    fromPath,
                    snapshotId}, this.onEndGetAnalysisDelegate, this.onGetAnalysisCompletedDelegate, userState);
    }
    
    public Sciendo.Music.Contracts.Analysis.Snapshot CreateNewSnapshot(string name)
    {
        return base.Channel.CreateNewSnapshot(name);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginCreateNewSnapshot(string name, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateNewSnapshot(name, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public Sciendo.Music.Contracts.Analysis.Snapshot EndCreateNewSnapshot(System.IAsyncResult result)
    {
        return base.Channel.EndCreateNewSnapshot(result);
    }
    
    private System.IAsyncResult OnBeginCreateNewSnapshot(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string name = ((string)(inValues[0]));
        return this.BeginCreateNewSnapshot(name, callback, asyncState);
    }
    
    private object[] OnEndCreateNewSnapshot(System.IAsyncResult result)
    {
        Sciendo.Music.Contracts.Analysis.Snapshot retVal = this.EndCreateNewSnapshot(result);
        return new object[] {
                retVal};
    }
    
    private void OnCreateNewSnapshotCompleted(object state)
    {
        if ((this.CreateNewSnapshotCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateNewSnapshotCompleted(this, new CreateNewSnapshotCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CreateNewSnapshotAsync(string name)
    {
        this.CreateNewSnapshotAsync(name, null);
    }
    
    public void CreateNewSnapshotAsync(string name, object userState)
    {
        if ((this.onBeginCreateNewSnapshotDelegate == null))
        {
            this.onBeginCreateNewSnapshotDelegate = new BeginOperationDelegate(this.OnBeginCreateNewSnapshot);
        }
        if ((this.onEndCreateNewSnapshotDelegate == null))
        {
            this.onEndCreateNewSnapshotDelegate = new EndOperationDelegate(this.OnEndCreateNewSnapshot);
        }
        if ((this.onCreateNewSnapshotCompletedDelegate == null))
        {
            this.onCreateNewSnapshotCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewSnapshotCompleted);
        }
        base.InvokeAsync(this.onBeginCreateNewSnapshotDelegate, new object[] {
                    name}, this.onEndCreateNewSnapshotDelegate, this.onCreateNewSnapshotCompletedDelegate, userState);
    }
    
    public int CreateElements(Sciendo.Music.Contracts.Analysis.Element[] newElements)
    {
        return base.Channel.CreateElements(newElements);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginCreateElements(Sciendo.Music.Contracts.Analysis.Element[] newElements, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateElements(newElements, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public int EndCreateElements(System.IAsyncResult result)
    {
        return base.Channel.EndCreateElements(result);
    }
    
    private System.IAsyncResult OnBeginCreateElements(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Sciendo.Music.Contracts.Analysis.Element[] newElements = ((Sciendo.Music.Contracts.Analysis.Element[])(inValues[0]));
        return this.BeginCreateElements(newElements, callback, asyncState);
    }
    
    private object[] OnEndCreateElements(System.IAsyncResult result)
    {
        int retVal = this.EndCreateElements(result);
        return new object[] {
                retVal};
    }
    
    private void OnCreateElementsCompleted(object state)
    {
        if ((this.CreateElementsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateElementsCompleted(this, new CreateElementsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CreateElementsAsync(Sciendo.Music.Contracts.Analysis.Element[] newElements)
    {
        this.CreateElementsAsync(newElements, null);
    }
    
    public void CreateElementsAsync(Sciendo.Music.Contracts.Analysis.Element[] newElements, object userState)
    {
        if ((this.onBeginCreateElementsDelegate == null))
        {
            this.onBeginCreateElementsDelegate = new BeginOperationDelegate(this.OnBeginCreateElements);
        }
        if ((this.onEndCreateElementsDelegate == null))
        {
            this.onEndCreateElementsDelegate = new EndOperationDelegate(this.OnEndCreateElements);
        }
        if ((this.onCreateElementsCompletedDelegate == null))
        {
            this.onCreateElementsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateElementsCompleted);
        }
        base.InvokeAsync(this.onBeginCreateElementsDelegate, new object[] {
                    newElements}, this.onEndCreateElementsDelegate, this.onCreateElementsCompletedDelegate, userState);
    }
    
    public Sciendo.Music.Contracts.Analysis.StatisticRow[] GetStatistics(string fromPath, int snapshotId)
    {
        return base.Channel.GetStatistics(fromPath, snapshotId);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetStatistics(string fromPath, int snapshotId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetStatistics(fromPath, snapshotId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public Sciendo.Music.Contracts.Analysis.StatisticRow[] EndGetStatistics(System.IAsyncResult result)
    {
        return base.Channel.EndGetStatistics(result);
    }
    
    private System.IAsyncResult OnBeginGetStatistics(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string fromPath = ((string)(inValues[0]));
        int snapshotId = ((int)(inValues[1]));
        return this.BeginGetStatistics(fromPath, snapshotId, callback, asyncState);
    }
    
    private object[] OnEndGetStatistics(System.IAsyncResult result)
    {
        Sciendo.Music.Contracts.Analysis.StatisticRow[] retVal = this.EndGetStatistics(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetStatisticsCompleted(object state)
    {
        if ((this.GetStatisticsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetStatisticsCompleted(this, new GetStatisticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetStatisticsAsync(string fromPath, int snapshotId)
    {
        this.GetStatisticsAsync(fromPath, snapshotId, null);
    }
    
    public void GetStatisticsAsync(string fromPath, int snapshotId, object userState)
    {
        if ((this.onBeginGetStatisticsDelegate == null))
        {
            this.onBeginGetStatisticsDelegate = new BeginOperationDelegate(this.OnBeginGetStatistics);
        }
        if ((this.onEndGetStatisticsDelegate == null))
        {
            this.onEndGetStatisticsDelegate = new EndOperationDelegate(this.OnEndGetStatistics);
        }
        if ((this.onGetStatisticsCompletedDelegate == null))
        {
            this.onGetStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatisticsCompleted);
        }
        base.InvokeAsync(this.onBeginGetStatisticsDelegate, new object[] {
                    fromPath,
                    snapshotId}, this.onEndGetStatisticsDelegate, this.onGetStatisticsCompletedDelegate, userState);
    }
    
    public void AnaliseThis(string folder, int snapshotId)
    {
        base.Channel.AnaliseThis(folder, snapshotId);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginAnaliseThis(string folder, int snapshotId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAnaliseThis(folder, snapshotId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public void EndAnaliseThis(System.IAsyncResult result)
    {
        base.Channel.EndAnaliseThis(result);
    }
    
    private System.IAsyncResult OnBeginAnaliseThis(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string folder = ((string)(inValues[0]));
        int snapshotId = ((int)(inValues[1]));
        return this.BeginAnaliseThis(folder, snapshotId, callback, asyncState);
    }
    
    private object[] OnEndAnaliseThis(System.IAsyncResult result)
    {
        this.EndAnaliseThis(result);
        return null;
    }
    
    private void OnAnaliseThisCompleted(object state)
    {
        if ((this.AnaliseThisCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AnaliseThisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AnaliseThisAsync(string folder, int snapshotId)
    {
        this.AnaliseThisAsync(folder, snapshotId, null);
    }
    
    public void AnaliseThisAsync(string folder, int snapshotId, object userState)
    {
        if ((this.onBeginAnaliseThisDelegate == null))
        {
            this.onBeginAnaliseThisDelegate = new BeginOperationDelegate(this.OnBeginAnaliseThis);
        }
        if ((this.onEndAnaliseThisDelegate == null))
        {
            this.onEndAnaliseThisDelegate = new EndOperationDelegate(this.OnEndAnaliseThis);
        }
        if ((this.onAnaliseThisCompletedDelegate == null))
        {
            this.onAnaliseThisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAnaliseThisCompleted);
        }
        base.InvokeAsync(this.onBeginAnaliseThisDelegate, new object[] {
                    folder,
                    snapshotId}, this.onEndAnaliseThisDelegate, this.onAnaliseThisCompletedDelegate, userState);
    }
}
